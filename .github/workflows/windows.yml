name: Build Windows (AMD64)

on:
  push:
    branches:
      - run-actions
      - windows-actions
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write

jobs:
  configure-build-and-package-windows:
    runs-on: windows-2025
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies on Windows
        run: choco install nasm openssl make
        shell: bash

      - name: List OpenSSL
        run: |
          dir C:\
          dir "C:\Program Files\"

      - name: Download NSIS
        shell: pwsh
        run: |
          Invoke-WebRequest `
            -Uri "https://netcologne.dl.sourceforge.net/project/nsis/NSIS%203/3.10/nsis-3.10-setup.exe" `
            -OutFile "$env:TEMP\nsis-setup.exe"

      - name: Install NSIS to C:\NSIS
        shell: cmd
        run: |
          start /wait "" "%TEMP%\nsis-setup.exe" /S /D=C:\NSIS

      - name: Add NSIS to PATH
        shell: pwsh
        run: |
          $nsisPath = 'C:\NSIS'
          echo "$nsisPath" | Out-File -Append -Encoding ascii $env:GITHUB_PATH

      - name: Check NSIS Install
        shell: pwsh
        run: |
          dir "C:\NSIS"
          dir "C:\NSIS\Bin"

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: 1.4.309.0
          cache: true

      - name: Configure
        run: |
          call "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat" x64
          cmake -G Ninja -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -DCMAKE_INSTALL_PREFIX=install "-DOPENSSL_ROOT_DIR=C:/Program Files/OpenSSL" "-DOPENSSL_USE_STATIC_LIBS=ON"
        shell: cmd

      - name: Build
        run: |
          call "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat" x64
          cmake --build build
        shell: cmd

      - name: Install
        run: cmake --install build
        shell: cmd

      - name: Package
        run: |
          cpack --config build/CPackConfig.cmake
          ls -lah releases
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: releases
          path: releases