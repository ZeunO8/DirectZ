name: Build iOS (arm64)

on:
  push:
    branches:
      - run-actions
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-ios:
    runs-on: macos-latest

    env:
      IOS_PLATFORM: OS64
      IOS_ARCH: arm64
      CMAKE_OSX_ARCHITECTURES: arm64
      CMAKE_OSX_SYSROOT: iphoneos
      CMAKE_IOS_INSTALL_COMBINED: ON

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          brew install ninja

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: 1.4.309.0
          cache: true

      - name: Set iOS Toolchain Variables
        id: toolchain
        run: |
          export SDKROOT=$(xcrun --sdk iphoneos --show-sdk-path)
          export CC=$(xcrun --sdk iphoneos -f clang)
          export CXX=$(xcrun --sdk iphoneos -f clang++)
          export AR=$(xcrun --sdk iphoneos -f ar)
          export RANLIB=$(xcrun --sdk iphoneos -f ranlib)
          echo "CC=$CC" >> "$GITHUB_ENV"
          echo "CXX=$CXX" >> "$GITHUB_ENV"
          echo "AR=$AR" >> "$GITHUB_ENV"
          echo "RANLIB=$RANLIB" >> "$GITHUB_ENV"
          echo "SDKROOT=$SDKROOT" >> "$GITHUB_ENV"

      - name: Configure
        run: |
          cmake -G Ninja -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_OSX_ARCHITECTURES=$CMAKE_OSX_ARCHITECTURES \
            -DCMAKE_SYSTEM_NAME=iOS \
            -DCMAKE_OSX_SYSROOT=$SDKROOT \
            -DCMAKE_INSTALL_PREFIX=install \
            -DCMAKE_C_COMPILER=$CC \
            -DCMAKE_CXX_COMPILER=$CXX \
            -DCMAKE_AR=$AR \
            -DCMAKE_RANLIB=$RANLIB \
            -DVulkan_INCLUDE_DIR=$VULKAN_SDK/include \
            -DVulkan_LIBRARY=$VULKAN_SDK/lib/libMoltenVK.a \

      - name: fix_format_security
        run: python3 fix_format_security.py build

      - name: Build
        run: cmake --build build

      - name: Install
        run: cmake --install build

      - name: Package
        run: |
          cpack --config build/CPackConfig.cmake
          ls -lah releases

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: releases
          path: releases
