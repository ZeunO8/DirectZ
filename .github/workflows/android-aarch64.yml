name: Build Android aarch64

on:
  push:
    branches:
      - run-actions
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write

env:
  DIRECTZ_VERSION: "1.1.1.1"

jobs:
  build-android:
    runs-on: windows-2025

    env:
      ANDROID_API_LEVEL: 31
      ANDROID_ABI: arm64-v8a
      ANDROID_PLATFORM: android-31

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          choco install wget unzip
        shell: powershell

      - name: Download and Extract Android NDK (bash)
        shell: bash
        run: |
          export NDK_VERSION=r27c
          export NDK_URL="https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-windows.zip"
          export NDK_ZIP="ndk.zip"
          export NDK_DIR="$USERPROFILE/ndk/android-ndk-${NDK_VERSION}"

          mkdir -p "$USERPROFILE/ndk"
          curl -fsSL "$NDK_URL" -o "$NDK_ZIP"
          unzip -q "$NDK_ZIP" -d "$USERPROFILE/ndk"
          echo "ANDROID_NDK_ROOT=$NDK_DIR" >> "$GITHUB_ENV"

      - name: Configure
        run: cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake -DANDROID_ABI=$ANDROID_ABI -DANDROID_PLATFORM=$ANDROID_PLATFORM
        shell: bash

      - name: fix_format_security
        run: python fix_format_security.py build
        shell: bash

      - name: Build
        run: cmake --build build
        shell: bash

      - name: Install
        run: cmake --install build
        shell: bash

      - name: Package
        run: |
          cpack --config build/CPackConfig.cmake
          ls -lah releases
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DirectZ-${{ env.DIRECTZ_VERSION }}-android-aarch64.tar.gz
          path: DirectZ-${{ env.DIRECTZ_VERSION }}-android-aarch64.tar.gz