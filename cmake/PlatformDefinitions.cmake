if("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
    set(LINUX ON)
    set(DZ_LIB_PREFIX "lib")
    set(SHARED_DZ_LIB_SUFFIX ".so")
    set(STATIC_DZ_LIB_SUFFIX ".a")
    if(DZ_INSTALL)
        file(READ "/etc/os-release" OS_RELEASE)
        string(REGEX MATCH "Debian|Ubuntu|Fedora" DIST ${OS_RELEASE})
        if(DIST STREQUAL "Debian" OR
            DIST STREQUAL "Ubuntu")
            set(DEB true)
        elseif(DIST STREQUAL "Fedora")
            set(RPM true)
        else()
            message(FATAL_ERROR ">>>> Found unknown distribution <<<<")
        endif()
    endif()
elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
    set(MACOS ON)
    add_definitions(-DMACOS)
    set(DZ_LIB_PREFIX "lib")
    set(SHARED_DZ_LIB_SUFFIX ".dylib")
    set(STATIC_DZ_LIB_SUFFIX ".a")
elseif(WIN32)
    set(WINDOWS ON)
    set(DZ_LIB_PREFIX "")
    set(SHARED_DZ_LIB_SUFFIX ".dll")
    set(STATIC_DZ_LIB_SUFFIX ".lib")
    set(DZ_LIB_INSTALL_DIR lib)
    set(CMAKE_POSITION_INDEPENDENT_CODE FALSE)
    add_compile_definitions(_CRT_SECURE_NO_WARNINGS)
endif()
string(REPLACE "-Werror" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error")

function(dz_setup_target
	TARGET_NAME
	LIBRARY_TYPE
	LIBRARY_DIR
	LIBRARY_PREFIX LIBRARY_NAME IMPLIB_NAME LIBRARY_SUFFIX
    ADD_TO_DZ_LIBRARIES)
	add_library(${TARGET_NAME} ${LIBRARY_TYPE} IMPORTED GLOBAL)
	if(WIN32)
		if(${LIBRARY_TYPE} STREQUAL "STATIC")
			set(LIBRARY_LOCATION "${LIBRARY_DIR}/${LIBRARY_PREFIX}${LIBRARY_NAME}${LIBRARY_SUFFIX}")
		elseif(${LIBRARY_TYPE} STREQUAL "SHARED")
			set(LIBRARY_LOCATION "${LIBRARY_DIR}/${LIBRARY_NAME}.dll")
			set(IMPLIB_LOCATION "${LIBRARY_DIR}/${IMPLIB_NAME}.lib")
			set_target_properties(${TARGET_NAME} PROPERTIES IMPORTED_IMPLIB ${IMPLIB_LOCATION})
		endif()
	else()
		set(LIBRARY_LOCATION "${LIBRARY_DIR}/${LIBRARY_PREFIX}${LIBRARY_NAME}${LIBRARY_SUFFIX}")
	endif()
    set(LAST_LIBRARY_LOCATION ${LIBRARY_LOCATION} PARENT_SCOPE)
    set(LAST_TARGET_NAME ${TARGET_NAME} PARENT_SCOPE)
    if(ADD_TO_DZ_LIBRARIES)
        set(DZ_LIBRARIES ${DZ_LIBRARIES} ${TARGET_NAME} PARENT_SCOPE)
    endif()
    if(EXISTS "${LIBRARY_LOCATION}")
        set(LIBRARY_EXISTS "exists")
    else()
        set(LIBRARY_EXISTS "does not exist")
    endif()
	set_target_properties(${TARGET_NAME} PROPERTIES IMPORTED_LOCATION ${LIBRARY_LOCATION})
    set(DZ_LIBRARIES_TO_INSTALL ${DZ_LIBRARIES_TO_INSTALL} ${LIBRARY_LOCATION} ${IMPLIB_LOCATION} PARENT_SCOPE)
    # message(STATUS "${TARGET_NAME} \"${LIBRARY_LOCATION}\" library ${LIBRARY_EXISTS}")
endfunction()